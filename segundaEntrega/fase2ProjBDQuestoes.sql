-- ALUNOS:  SERGIO DE SOUSA DUARTE 117110814
--          MARTA LAIS DE MACEDO DANTAS 116110580
--          ARTHUR VINICIUS ROZENDO SANTOS 119110583
--          ANDERSON DOS SANTOS SILVA 119110279
--          EDIMAR CHAVES JUNIOR 118210122
--          (GRUPO 5)

-- As Queries foram desenvolvidas individualmente e agrupadas nesse documento, por esse motivo, é indicado executar individualmente.

-- 1
SELECT DISTINCT p.* FROM PRODUTO p
LEFT JOIN PROD_ESTOCADO_CENT_DIST pecd ON pecd.CODIGO_PRODUTO = p.CODIGO
LEFT JOIN CENTRO_DE_DISTRIBUICAO cd ON cd.CODIGO = pecd.CODIGO_CENTRO_DISTRIBUICAO
LEFT JOIN ENDERECO e ON e.CODIGO = cd.CODIGO_ENDERECO
WHERE pecd.QUANTIDADE > 100
    AND e.CIDADE = 'São Paulo';

-- 2
SELECT DISTINCT cd.* FROM CENTRO_DE_DISTRIBUICAO cd
LEFT JOIN PROD_ESTOCADO_CENT_DIST pecd ON pecd.CODIGO_CENTRO_DISTRIBUICAO = cd.CODIGO
LEFT JOIN PRODUTO p ON p.CODIGO = pecd.CODIGO_PRODUTO
WHERE p.NOME = 'iPhone 11';

-- 3
SELECT DISTINCT p.* FROM PRODUTO p
LEFT JOIN COMPRA_POSSUI_PRODUTO cpp ON cpp.CODIGO_PRODUTO = p.CODIGO
LEFT JOIN ORDEM_DE_COMPRA oc ON cpp.CODIGO_COMPRA = oc.codigo
WHERE cpp.NOTA > 5
    AND TO_CHAR(oc.DATA_COMPRA, 'mmyyyy') = '012020';


-- 4
SELECT DISTINCT f.NOME FROM FORNECEDOR f
LEFT JOIN FORNECEDOR_FORNECE_PRODUTO ffp ON ffp.CODIGO_FORNECEDOR = f.CODIGO
LEFT JOIN PRODUTO p ON p.CODIGO = ffp.CODIGO_PRODUTO
WHERE (SELECT AVG(p.PRECO) FROM PRODUTO p) <= '163.00';



-- 5
SELECT DISTINCT pecd.QUANTIDADE,f.* FROM PROD_ESTOCADO_CENT_DIST pecd
LEFT JOIN PRODUTO p ON p.CODIGO = pecd.CODIGO_PRODUTO
LEFT JOIN FORNECEDOR_FORNECE_PRODUTO ffp ON ffp.CODIGO_PRODUTO = p.CODIGO
LEFT JOIN FORNECEDOR f ON f.CODIGO = ffp.CODIGO_FORNECEDOR
LEFT JOIN COMPRA_POSSUI_PRODUTO cpp ON cpp.CODIGO_PRODUTO = p.CODIGO
LEFT JOIN ORDEM_DE_COMPRA oc ON oc.CODIGO = cpp.CODIGO_COMPRA
WHERE p.NOME = 'Caixa de Som'
    AND oc.DESCONTO = '45'
    AND TO_CHAR(oc.DATA_COMPRA, 'mmyyyy') = '022020';


-- 6
SELECT p.NOME,p.PRECO FROM PRODUTO p
LEFT JOIN CARRINHO_TEM_PRODUTO ctp ON ctp.CODIGO_PRODUTO = p.CODIGO
ORDER BY p.PRECO ASC;


--7
SELECT p.* FROM PRODUTO p
LEFT JOIN CATEGORIA ct ON ct.CODIGO = p.CODIGO_CATEGORIA
WHERE p.PRECO IN (SELECT MIN(p.PRECO) FROM Produto p)
    AND ct.NOME = 'TV';

--8
SELECT p.NOME,p.PRECO FROM PRODUTO p
LEFT JOIN CATEGORIA ct ON ct.CODIGO = p.CODIGO_CATEGORIA
INNER JOIN HISTORICO h ON h.CODIGO_PRODUTO = p.CODIGO
WHERE ct.NOME = 'Instrumentos Musicais';

--9
SELECT COUNT(*) FROM ORDEM_DE_COMPRA cp
LEFT JOIN CLIENTE ct ON cp.CODIGO_CLIENTE = ct.CODIGO
WHERE ct.NOME = 'José da Costa'
    AND TO_CHAR(cp.DATA_COMPRA, 'mmyyyy') = '022020';

--10
SELECT * FROM CLIENTE ct
FULL OUTER JOIN EMAIL e ON e.CODIGO_CLIENTE = ct.CODIGO
WHERE e.CODIGO_CLIENTE IS NULL;


--11
SELECT p.* FROM PRODUTO p
LEFT JOIN COMPRA_POSSUI_PRODUTO cpp ON cpp.CODIGO_PRODUTO = p.CODIGO
LEFT JOIN ORDEM_DE_COMPRA oc ON oc.CODIGO = cpp.CODIGO_COMPRA
LEFT JOIN CLIENTE ct ON ct.CODIGO = oc.CODIGO_CLIENTE
WHERE ct.NOME != 'Amadeu da Costa';


--12
CREATE VIEW avaliacoes_dos_produtos AS
    SELECT cap.DESCRICAO, ct.CODIGO, ct.NOME AS nome_cliente, p.NOME AS nome_produto FROM COMPRA_AVALIA_PRODUTO cap
    LEFT JOIN ORDEM_DE_COMPRA oc ON oc.CODIGO = cap.CODIGO_COMPRA
    LEFT JOIN CLIENTE ct ON ct.CODIGO = oc.CODIGO_CLIENTE
    LEFT JOIN PRODUTO p ON p.CODIGO = cap.CODIGO_PRODUTO;

--13
CREATE VIEW dados_das_ordens AS
    SELECT oc.*,nfe.VALOR_TOTAL,ct.NOME AS nome_cliente,tp.NOME AS nome_transportadora FROM ORDEM_DE_COMPRA oc
    LEFT JOIN CLIENTE ct ON ct.CODIGO = oc.CODIGO_CLIENTE
    LEFT JOIN NOTA_FISCAL nfe ON nfe.CODIGO = oc.CODIGO_NOTA_FISCAL
    LEFT JOIN TRANSPORTADORA tp ON tp.CODIGO = oc.CODIGO_TRANSPORTADORA;

--14
CREATE OR REPLACE TRIGGER associa_transportadora_a_compra
    BEFORE INSERT ON ORDEM_DE_COMPRA
    FOR EACH ROW
DECLARE
    codigo_transportadora NUMBER;
    codigo_transportadora_menos_usada NUMBER;
BEGIN
    SELECT CODIGO_TRANSPORTADORA INTO codigo_transportadora
    FROM dual;

    SELECT CODIGO_TRANSPORTADORA INTO codigo_transportadora_menos_usada
    FROM ORDEM_DE_COMPRA ocp
    WHERE ROWNUM = 1
    GROUP BY ocp.CODIGO_TRANSPORTADORA
    ORDER BY COUNT(*) DESC;

    :NEW.codigo_transportadora := codigo_transportadora_menos_usada;
END

--15
CREATE OR REPLACE PROCEDURE remover_produto_vencido(codigo_produto NUMBER)
AS
BEGIN
    DELETE FROM PRODUTO
    WHERE DATA_VALIDADE < SYSDATE;
END;