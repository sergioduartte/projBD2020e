-- ENDERECO
CREATE TABLE ENDERECO (
 CODIGO INTEGER,
 RUA VARCHAR2(160) NOT NULL,
 NUMERO VARCHAR2(160) NOT NULL,
 BAIRRO VARCHAR2(160) NOT NULL,
 CIDADE VARCHAR2(160) NOT NULL,
 ESTADO VARCHAR2(2) NOT NULL,
 CEP VARCHAR2(9) NOT NULL,
 CONSTRAINT ENDERECO_PK PRIMARY KEY (CODIGO)
);
-- CLIENTE
CREATE TABLE CLIENTE (
 CODIGO INTEGER,
 NOME VARCHAR2(60) NOT NULL,
 SOBRENOME VARCHAR2(60) NOT NULL,
 EMAIL VARCHAR2(160) NOT NULL,
 DATA_NASCIMENTO DATE NOT NULL,
 PONTOS NUMBER DEFAULT 0,
 SEXO VARCHAR2(9),
 DATA_INDICACAO DATE,
 CLIENTE_INDICA INTEGER,
 CODIGO_ENDERECO INTEGER,
 CONSTRAINT CLIENTE_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CODIGO_ENDERECO_FK FOREIGN KEY (CODIGO_ENDERECO)
REFERENCES ENDERECO(CODIGO)
);
ALTER TABLE CLIENTE ADD CONSTRAINT CLIENTE_INDICA_FK FOREIGN KEY
(CLIENTE_INDICA) REFERENCES CLIENTE(CODIGO);
-- TELEFONES CLIENTE
CREATE TABLE TELEFONES_CLIENTE (
 CODIGO INTEGER,
 CODIGO_CLIENTE INTEGER,
 NUMERO VARCHAR2(30) NOT NULL,
 CONSTRAINT TELEFONES_CLIENTE_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CLIENTE_TELEFONE_UK UNIQUE (CODIGO_CLIENTE, NUMERO),
 CONSTRAINT CODIGO_CLIENTE_FK FOREIGN KEY (CODIGO_CLIENTE)
REFERENCES CLIENTE(CODIGO)
);
-- EMAIL
CREATE TABLE EMAIL (
 CODIGO INTEGER,
 ASSUNTO VARCHAR2(160),
 CONTEUDO VARCHAR2(255) NOT NULL,
 DATA_ENVIO DATE NOT NULL,
 CLIENTE_ABRIU VARCHAR2(3) DEFAULT 'NAO' NOT NULL,
 CLIENTE_CLICOU VARCHAR2(3) DEFAULT 'NAO' NOT NULL,
 CODIGO_CLIENTE INTEGER NOT NULL,
 CONSTRAINT EMAIL_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CLIENTE_RECEBE_FK FOREIGN KEY (CODIGO_CLIENTE)
REFERENCES CLIENTE(CODIGO) ON DELETE CASCADE,
 CONSTRAINT CHECK_CLIENTE_ABRIU CHECK (CLIENTE_ABRIU IN ('SIM',
'NAO')),
 CONSTRAINT CHECK_CLIENTE_CLICOU CHECK (CLIENTE_CLICOU IN ('SIM',
'NAO'))
);
-- TRANSPORTADORA
CREATE TABLE TRANSPORTADORA (
 CODIGO INTEGER,
 NOME VARCHAR2(160) NOT NULL,
 EMAIL VARCHAR2(160),
 TELEFONE VARCHAR2(30),
 SITE VARCHAR2(160),
 CODIGO_ENDERECO INTEGER NOT NULL,
 CONSTRAINT TRANSPORTADORA_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CODIGO_ENDERECO_TRANSPORTADORA_FK FOREIGN KEY
(CODIGO_ENDERECO) REFERENCES ENDERECO(CODIGO)
);
-- FORNECEDOR
CREATE TABLE FORNECEDOR (
 CODIGO INTEGER,
 NOME VARCHAR2(50) NOT NULL,
 HOME_PAGE VARCHAR2(50),
 EMAIL VARCHAR2(160),
 TELEFONE VARCHAR2(30),
 CODIGO_ENDERECO INTEGER NOT NULL,
 CONSTRAINT FORNECEDOR_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CODIGO_ENDERECO_FORNECEDOR_FK FOREIGN KEY
(CODIGO_ENDERECO) REFERENCES ENDERECO(CODIGO)
);
-- CENTRO DE DISTRIBUICAO
CREATE TABLE CENTRO_DE_DISTRIBUICAO (
 CODIGO INTEGER,
 NOME VARCHAR2(50) NOT NULL,
 CODIGO_ENDERECO INTEGER NOT NULL,
 CONSTRAINT CENTRO_DE_DISTRIBUICAO_PK PRIMARY KEY(CODIGO),
 CONSTRAINT CODIGO_ENDERECO_CENTRO_DISTRIBUICAO_FK FOREIGN KEY
(CODIGO_ENDERECO) REFERENCES ENDERECO(CODIGO)
);
-- CATEGORIA
CREATE TABLE CATEGORIA (
 CODIGO INTEGER,
 NOME VARCHAR2(50) NOT NULL,
 CONSTRAINT CATEGORIA_PK PRIMARY KEY (CODIGO)
);
-- NOTA FISCAL
CREATE TABLE NOTA_FISCAL (
 CODIGO INTEGER,
 NUMERO VARCHAR2(200) NOT NULL,
 SERIE VARCHAR2(200) NOT NULL,
 INSCRICAO_ESTADUAL VARCHAR2(200) NOT NULL,
 CHAVE_ACESSO VARCHAR2(160) NOT NULL,
 VALOR_TOTAL NUMBER(11,2) NOT NULL,
 CONSTRAINT NOTA_FISCAL_PK PRIMARY KEY(CODIGO)
);
-- CUPOM DE DESCONTO
CREATE TABLE CUPOM_DE_DESCONTO (
 CODIGO INTEGER,
 DESCONTO NUMBER(4,2),
 CONSTRAINT CUPOM_DE_DESCONTO_PK PRIMARY KEY (CODIGO)
);
-- CUPOM DE DESCONTO X CATEGORIA
CREATE TABLE CUPOM_RESTRICAO_CATEGORIA (
 CODIGO_CUPOM INTEGER,
 CODIGO_CATEGORIA INTEGER,
 CONSTRAINT CUPOM_RESTRICAO_CATEGORIA PRIMARY KEY (CODIGO_CUPOM,
CODIGO_CATEGORIA),
 CONSTRAINT CODIGO_CUPOM_FK FOREIGN KEY (CODIGO_CUPOM) REFERENCES
CUPOM_DE_DESCONTO(CODIGO),
 CONSTRAINT CODIGO_CATEGORIA_FK FOREIGN KEY (CODIGO_CATEGORIA)
REFERENCES CATEGORIA(CODIGO)
);
-- PRODUTO
CREATE TABLE PRODUTO (
 CODIGO INTEGER,
 NOME VARCHAR2(200) NOT NULL,
 PRECO NUMBER(11,2) NOT NULL,
 DATA_FABRICACAO DATE NOT NULL,
 DESCRICAO VARCHAR2(1000),
 ESPECIFICACAO VARCHAR2(2000),
 DATA_VALIDADE DATE NOT NULL,
 CODIGO_CATEGORIA INTEGER NOT NULL,
 CONSTRAINT CODIGO_PRODUTO_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CODIGO_CATEGORIA_PRODUTO_FK FOREIGN KEY
(CODIGO_CATEGORIA) REFERENCES CATEGORIA(CODIGO)
);
-- FOTOS_PRODUTO
CREATE TABLE FOTOS_PRODUTO (
 CODIGO INTEGER,
 CODIGO_PRODUTO INTEGER,
 URL VARCHAR2(250) NOT NULL,
 CONSTRAINT FOTOS_PRODUTO_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CODIGO_PRODUTO_FOTOS_FK FOREIGN KEY (CODIGO_PRODUTO)
REFERENCES PRODUTO(CODIGO)
);
CREATE TABLE FORNECEDOR_FORNECE_PRODUTO (
 CODIGO_PRODUTO INTEGER,
 CODIGO_FORNECEDOR INTEGER,
 CONSTRAINT FORNECEDOR_FORNECE_PRODUTO_PK PRIMARY KEY
(CODIGO_PRODUTO, CODIGO_FORNECEDOR),
 CONSTRAINT CODIGO_PRODUTO_FORNECE_FK FOREIGN KEY
(CODIGO_PRODUTO) REFERENCES PRODUTO(CODIGO),
 CONSTRAINT CODIGO_FORNECEDOR_FORNECE_FK FOREIGN KEY
(CODIGO_FORNECEDOR) REFERENCES FORNECEDOR(CODIGO)
);
CREATE TABLE PROD_ESTOCADO_CENT_DIST (
 CODIGO_PRODUTO INTEGER,
 CODIGO_CENTRO_DISTRIBUICAO INTEGER,
 QUANTIDADE INTEGER DEFAULT 0 NOT NULL,
 CONSTRAINT PROD_ESTOCADO_CENTR_DIST_PK PRIMARY KEY (CODIGO_PRODUTO,
CODIGO_CENTRO_DISTRIBUICAO),
 CONSTRAINT CODIGO_PRODUTO_ESTOCADO_FK FOREIGN KEY (CODIGO_PRODUTO)
REFERENCES PRODUTO(CODIGO),
 CONSTRAINT CODIGO_CENT_DIST_ESTOCADO_FK FOREIGN KEY
(CODIGO_CENTRO_DISTRIBUICAO) REFERENCES
CENTRO_DE_DISTRIBUICAO(CODIGO)
);
--CARRINHO
CREATE TABLE CARRINHO (
 CODIGO INTEGER,
 CODIGO_CUPOM INTEGER,
 CODIGO_CLIENTE INTEGER NOT NULL,
 CONSTRAINT CARRINHO_PK PRIMARY KEY(CODIGO),
 CONSTRAINT CLIENTE_POSSUI_CARRINHO FOREIGN KEY(CODIGO_CLIENTE)
REFERENCES CLIENTE(CODIGO) ON DELETE CASCADE,
 CONSTRAINT CUPOM_DESCONTO_FK FOREIGN KEY(CODIGO_CUPOM)
REFERENCES CUPOM_DE_DESCONTO(CODIGO)
);
-- CARRINHO X PRODUTO
CREATE TABLE CARRINHO_TEM_PRODUTO (
 CODIGO_PRODUTO INTEGER,
 CODIGO_CARRINHO INTEGER,
 QUANTIDADE INTEGER DEFAULT 0 NOT NULL,
 CONSTRAINT CARRINHO_TEM_PRODUTO_PK PRIMARY KEY (CODIGO_PRODUTO,
CODIGO_CARRINHO),
 CONSTRAINT CODIGO_PRODUTO_CARRINHO_FK FOREIGN KEY (CODIGO_PRODUTO)
REFERENCES PRODUTO(CODIGO),
 CONSTRAINT CODIGO_CARRINHO_PRODUTO_FK FOREIGN KEY (CODIGO_CARRINHO)
REFERENCES CARRINHO(CODIGO)
);
-- ORDEM DE COMPRA
CREATE TABLE ORDEM_DE_COMPRA (
 CODIGO INTEGER,
 DATA_COMPRA DATE DEFAULT SYSDATE NOT NULL,
 STATUS VARCHAR2(20) DEFAULT 'AGUARDANDO PAGAMENTO'
NOT NULL,
 DESCONTO NUMBER(4,2),
 VALOR_FRETE NUMBER(10,2) NOT NULL,
 CODIGO_ENDERECO INTEGER NOT NULL,
 CODIGO_CLIENTE INTEGER NOT NULL,
 CODIGO_NOTA_FISCAL INTEGER NOT NULL,
 CODIGO_TRANSPORTADORA INTEGER NOT NULL,
 CONSTRAINT ORDEM_DE_COMPRA_PK PRIMARY KEY (CODIGO),
 CONSTRAINT CODIGO_ENDERECO_COMPRA_FK FOREIGN KEY
(CODIGO_ENDERECO) REFERENCES ENDERECO(CODIGO),
 CONSTRAINT CODIGO_CLIENTE_COMPRA_FK FOREIGN KEY
(CODIGO_CLIENTE) REFERENCES CLIENTE(CODIGO),
 CONSTRAINT CODIGO_NOTA_FISCAL_COMPRA_FK FOREIGN KEY
(CODIGO_NOTA_FISCAL) REFERENCES NOTA_FISCAL(CODIGO),
 CONSTRAINT CODIGO_TRANSPORTADORA_COMPRA_FK FOREIGN KEY
(CODIGO_TRANSPORTADORA) REFERENCES TRANSPORTADORA(CODIGO),
 CONSTRAINT CHECK_STATUS CHECK (STATUS IN ('AGUARDANDO PAGAMENTO',
'EM SEPARACAO', 'EM TRANSPORTE', 'FINALIZADA'))
);
-- ORDEM DE COMPRA POSSUI PRODUTO
CREATE TABLE COMPRA_POSSUI_PRODUTO (
 CODIGO_COMPRA INTEGER,
 CODIGO_PRODUTO INTEGER,
 QUANTIDADE INTEGER DEFAULT 0 NOT NULL,
 VALOR_ATUAL NUMBER(11,2) NOT NULL,
 CONSTRAINT COMPRA_PRODUTO_PK PRIMARY KEY(CODIGO_COMPRA,
CODIGO_PRODUTO),
 CONSTRAINT COMPRA_PRODUTO_FK FOREIGN KEY(CODIGO_COMPRA) REFERENCES
ORDEM_DE_COMPRA(CODIGO),
 CONSTRAINT PRODUTO_COMPRA_FK FOREIGN KEY(CODIGO_PRODUTO) REFERENCES
PRODUTO(CODIGO)
);
-- ORDEM DE COMPRA AVALIA PRODUTO
CREATE TABLE COMPRA_AVALIA_PRODUTO (
 CODIGO_COMPRA INTEGER,
 CODIGO_PRODUTO INTEGER,
 NOTA NUMBER(1,0) DEFAULT 0 NOT NULL,
 DESCRICAO VARCHAR2(2000),
 CONSTRAINT AVALIA_PRODUTO_PK PRIMARY KEY(CODIGO_COMPRA,
CODIGO_PRODUTO),
 CONSTRAINT AVALIA_PRODUTO_FK FOREIGN KEY(CODIGO_COMPRA) REFERENCES
ORDEM_DE_COMPRA(CODIGO),
 CONSTRAINT PRODUTO_AVALIA_FK FOREIGN KEY(CODIGO_PRODUTO) REFERENCES
PRODUTO(CODIGO)
);
CREATE TABLE HISTORICO (
 CODIGO INTEGER,
 DATA DATE DEFAULT SYSDATE NOT NULL,
 TEMPO_PAGINA NUMBER(4),
 FINALIZOU VARCHAR2(3),
 CODIGO_PRODUTO INTEGER NOT NULL,
 CODIGO_CLIENTE INTEGER NOT NULL,
 CONSTRAINT HISTORICO_PK PRIMARY KEY(CODIGO),
 CONSTRAINT CHECK_CLIENTE_FINALIZOU CHECK (FINALIZOU IN ('SIM',
'NAO')),
 CONSTRAINT HISTORICO_PRODUTO_FK FOREIGN KEY(CODIGO_PRODUTO)
REFERENCES PRODUTO(CODIGO),
 CONSTRAINT HISTORICO_CLIENTE_FK FOREIGN KEY(CODIGO_CLIENTE)
REFERENCES CLIENTE(CODIGO)
);